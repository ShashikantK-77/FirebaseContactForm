{"version":3,"sources":["Form/form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","name","value","useState","email","phone","address","message","user","setUser","getUserData","event","target","postData","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","alert","action","className","type","onChange","placeholder","autoComplete","required","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNA+EeA,EA5EF,WACX,IAOIC,EAAKC,EAPT,EAAwBC,mBAAS,CAC/BF,KAAK,GACLG,MAAM,GACNC,MAAM,GACNC,QAAQ,GACRC,QAAQ,KALV,mBAAOC,EAAP,KAAaC,EAAb,KAQIC,EAAc,SAACC,GACnBV,EAAKU,EAAMC,OAAOX,KAClBC,EAAMS,EAAMC,OAAOV,MAEnBO,EAAQ,2BAAID,GAAL,kBAAWP,EAAMC,MAGpBW,EAAQ,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,yDAChBD,EAAEE,iBAEIf,EAAkCO,EAAlCP,KAAKG,EAA6BI,EAA7BJ,MAAMC,EAAuBG,EAAvBH,MAAMC,EAAiBE,EAAjBF,QAAQC,EAASC,EAATD,UAC5BN,GAAQG,GAASC,GAASC,GAAWC,GAJxB,gCAKIU,MAAM,qEAAqE,CAC3FC,OAAO,OACPC,QAAQ,CACE,eAAe,oBAEzBC,KAAKC,KAAKC,UAAU,CAClBrB,OACAG,QACAC,QACAC,UACAC,cAfU,gBAmBZE,EAAQ,CACNR,KAAK,GACLG,MAAM,GACNC,MAAM,GACNC,QAAQ,GACRC,QAAQ,KAEVgB,MAAM,4BA1BM,uBA8BZA,MAAM,yBA9BM,4CAAF,sDAqCZ,OACC,mCACA,+BACC,uBAAMC,OAAO,IAAIC,UAAU,QAAQP,OAAO,OAA1C,UACE,qBAAKO,UAAU,yBACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,WACf,sBAAKA,UAAU,aAAf,UACE,4CACA,uBAAOC,KAAK,OAAOzB,KAAK,OAAOC,MAAOM,EAAKP,KAAM0B,SAAUjB,EAAakB,YAAY,WAAWC,aAAa,MAAMC,UAAQ,IAC1H,uBAAOJ,KAAK,QAAQzB,KAAK,QAAQC,MAAOM,EAAKJ,MAAOuB,SAAUjB,EAAakB,YAAY,QAAQC,aAAa,QAC5G,uBAAOH,KAAK,OAAOzB,KAAK,QAAQC,MAAOM,EAAKH,MAAOsB,SAAUjB,EAAakB,YAAY,QAAQC,aAAa,QAC3G,uBAAOH,KAAK,OAAOzB,KAAK,UAAUC,MAAOM,EAAKF,QAASqB,SAAUjB,EAAakB,YAAY,UAAUC,aAAa,QACjH,uBAAOH,KAAK,OAAOzB,KAAK,UAAUC,MAAOM,EAAKD,QAASoB,SAAUjB,EAAakB,YAAY,aAAaC,aAAa,QAEpH,wBAAQE,QAASlB,EAAUa,KAAK,SAAhC,+BC5DOM,EARH,WACV,OACE,mCACD,cAAC,EAAD,OCMYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a551d40.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./style.css\";\r\n\r\nconst Form = () => {\r\n  const [user, setUser] = useState({\r\n    name:\"\",\r\n    email:\"\",\r\n    phone:\"\",\r\n    address:\"\",\r\n    message:\"\",\r\n  });\r\n  let name,value;\r\nconst getUserData = (event) =>{\r\n  name=event.target.name;\r\n  value=event.target.value;\r\n\r\n  setUser({...user,[name]:value});\r\n\r\n}; \r\nconst postData= async (e)=>{\r\ne.preventDefault();\r\n\r\nconst{name,email,phone,address,message}=user;\r\nif(name && email && phone && address && message){\r\n  const res = await fetch(\"https://reactform-c8f3d-default-rtdb.firebaseio.com/reactform.json\",{\r\n    method:\"POST\",\r\n    headers:{\r\n              \"Content-Type\":\"application/json\",         \r\n    },\r\n    body:JSON.stringify({\r\n      name,\r\n      email,\r\n      phone,\r\n      address,\r\n      message,\r\n    })\r\n  });\r\n  if(res){\r\n    setUser({\r\n      name:\"\",\r\n      email:\"\",\r\n      phone:\"\",\r\n      address:\"\",\r\n      message:\"\",\r\n    });\r\n    alert(\"Data Stored Succesfully\");\r\n   \r\n  }\r\n}else{\r\n    alert(\"Plz Fill All The Data\");\r\n}\r\n\r\n\r\n\r\n};\r\n\r\n  return (\r\n   <>\r\n   <body>\r\n    <form action=\"/\" className=\"decor\" method=\"POST\">\r\n      <div className=\"form-left-decoration\"></div>\r\n      <div className=\"form-right-decoration\"></div>\r\n      <div className=\"circle\"></div>\r\n      <div className=\"form-inner\">\r\n        <h1>Contact us</h1>\r\n        <input type=\"text\" name=\"name\" value={user.name} onChange={getUserData} placeholder=\"Username\" autoComplete=\"off\" required/>\r\n        <input type=\"email\" name=\"email\" value={user.email} onChange={getUserData} placeholder=\"Email\" autoComplete=\"off\"/>\r\n        <input type=\"text\" name=\"phone\" value={user.phone} onChange={getUserData} placeholder=\"Phone\" autoComplete=\"off\"/>\r\n        <input type=\"text\" name=\"address\" value={user.address} onChange={getUserData} placeholder=\"Address\" autoComplete=\"off\"/>\r\n        <input type=\"text\" name=\"message\" value={user.message} onChange={getUserData} placeholder=\"Message...\" autoComplete=\"off\"/>\r\n        \r\n        <button onClick={postData} type=\"submit\" >Submit</button>\r\n      </div>\r\n    </form>\r\n  </body>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\nimport Form from './Form/form'\n\nconst App = () => {\n  return (\n    <>\n   <Form/>\n     </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}